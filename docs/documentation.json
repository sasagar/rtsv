{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "Real-time Survey Tool Documentation",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 169,
			"name": "app/admin/[eventId]/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 302,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/admin/[eventId]/page.tsx",
							"line": 122,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "EventAdmin component for managing events and questions.\nAllows administrators to add, open, close, display, hide, and delete questions.\nIt also provides functionality to pick and hide individual free-text answers."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered EventAdmin component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/app/admin/[eventId]/page.tsx",
									"line": 122,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						302
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/admin/[eventId]/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 170,
			"name": "app/admin/invite-codes/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 304,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/admin/invite-codes/page.tsx",
							"line": 8,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/admin/invite-codes/page.tsx",
									"line": 8,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						304
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/admin/invite-codes/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 152,
			"name": "app/admin/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 182,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/admin/page.tsx",
							"line": 16,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 183,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/admin/page.tsx",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/admin/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 131,
			"name": "app/api/invite-codes/route",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 135,
					"name": "GET",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/api/invite-codes/route.ts",
							"line": 47,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "GET",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles GET requests to retrieve all invite codes.\nRequires user authentication. Only authenticated users can view invite codes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A JSON response with a list of invite codes or an error."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/app/api/invite-codes/route.ts",
									"line": 47,
									"character": 22
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The incoming request object."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "next",
													"packagePath": "dist/server/web/spec-extension/response.d.ts",
													"qualifiedName": "NextResponse"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"name": "NextResponse",
												"package": "next"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "next",
													"packagePath": "dist/server/web/spec-extension/response.d.ts",
													"qualifiedName": "NextResponse"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 138,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 139,
																	"name": "error",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/app/api/invite-codes/route.ts",
																			"line": 68,
																			"character": 31
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	},
																	"defaultValue": "e.message"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		139
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/app/api/invite-codes/route.ts",
																	"line": 68,
																	"character": 29
																}
															]
														}
													}
												],
												"name": "NextResponse",
												"package": "next"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "POST",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/api/invite-codes/route.ts",
							"line": 10,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "POST",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles POST requests to create a new invite code.\nRequires user authentication. Only authenticated users can create invite codes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A JSON response with the created invite code or an error."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/app/api/invite-codes/route.ts",
									"line": 10,
									"character": 22
								}
							],
							"parameters": [
								{
									"id": 134,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The incoming request object containing invite code details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "next",
											"packagePath": "dist/server/web/spec-extension/response.d.ts",
											"qualifiedName": "NextResponse"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "NextResponse",
										"package": "next"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						135,
						132
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/api/invite-codes/route.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 171,
			"name": "app/auth/login/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 306,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/auth/login/page.tsx",
							"line": 5,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/auth/login/page.tsx",
									"line": 5,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						306
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/auth/login/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 172,
			"name": "app/auth/signup/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 308,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/auth/signup/page.tsx",
							"line": 5,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/auth/signup/page.tsx",
									"line": 5,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						308
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/auth/signup/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 173,
			"name": "app/event/[accessCode]/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 310,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/event/[accessCode]/page.tsx",
							"line": 176,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 311,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "EventPage component for audience members to view and answer questions for a specific event.\nIt fetches event and question data, manages user sessions, and handles answer submissions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered EventPage component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/app/event/[accessCode]/page.tsx",
									"line": 176,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						310
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/event/[accessCode]/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 140,
			"name": "app/layout",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 141,
					"name": "metadata",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/app/layout.tsx",
							"line": 9,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "next",
							"packagePath": "dist/lib/metadata/types/metadata-interface.d.ts",
							"qualifiedName": "Metadata"
						},
						"name": "Metadata",
						"package": "next"
					},
					"defaultValue": "..."
				},
				{
					"id": 175,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/layout.tsx",
							"line": 14,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/layout.tsx",
									"line": 14,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 177,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Readonly"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 178,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 179,
															"name": "children",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/app/layout.tsx",
																	"line": 17,
																	"character": 2
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@types/react",
																	"packagePath": "index.d.ts",
																	"qualifiedName": "React.ReactNode"
																},
																"name": "React.ReactNode",
																"package": "@types/react"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																179
															]
														}
													],
													"sources": [
														{
															"fileName": "src/app/layout.tsx",
															"line": 16,
															"character": 12
														}
													]
												}
											}
										],
										"name": "Readonly",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						141
					]
				},
				{
					"title": "Functions",
					"children": [
						175
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/layout.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 142,
			"name": "app/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 180,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/page.tsx",
							"line": 3,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 181,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/page.tsx",
									"line": 3,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						180
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 174,
			"name": "app/presenter/[eventId]/page",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 312,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/app/presenter/[eventId]/page.tsx",
							"line": 118,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "PresenterPage component for displaying real-time question results to an audience.\nIt fetches event and question data, and updates results via Socket.IO."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered PresenterPage component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/app/presenter/[eventId]/page.tsx",
									"line": 118,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						312
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app/presenter/[eventId]/page.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 153,
			"name": "components/admin/AdminAddQuestionForm",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 321,
					"name": "default",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A form component for administrators to add new questions to an event."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "The component props."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The rendered form component."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/components/admin/AdminAddQuestionForm.tsx",
							"line": 26,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@types/react",
							"packagePath": "index.d.ts",
							"qualifiedName": "React.FC"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "rtsv",
									"packagePath": "src/components/admin/AdminAddQuestionForm.tsx",
									"qualifiedName": "AdminAddQuestionFormProps"
								},
								"name": "AdminAddQuestionFormProps",
								"package": "rtsv"
							}
						],
						"name": "React.FC",
						"package": "@types/react"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						321
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/admin/AdminAddQuestionForm.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 154,
			"name": "components/admin/InviteCodeManager",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 184,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/admin/InviteCodeManager.tsx",
							"line": 17,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "InviteCodeManager component provides an interface for administrators to manage invite codes.\nIt allows adding new invite codes and viewing existing ones."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered InviteCodeManager component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/admin/InviteCodeManager.tsx",
									"line": 17,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						184
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/admin/InviteCodeManager.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 143,
			"name": "components/AnimatedNumber",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 318,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/AnimatedNumber.tsx",
							"line": 17,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A component that animates a number change with a simple count-up/down effect."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered component displaying the animated number."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/AnimatedNumber.tsx",
									"line": 17,
									"character": 23
								}
							],
							"parameters": [
								{
									"id": 320,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The component props."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "rtsv",
											"packagePath": "src/components/AnimatedNumber.tsx",
											"qualifiedName": "AnimatedNumberProps"
										},
										"name": "AnimatedNumberProps",
										"package": "rtsv",
										"highlightedProperties": {
											"value": [
												{
													"kind": "text",
													"text": "The target value to animate to."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						318
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/AnimatedNumber.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 155,
			"name": "components/auth/AuthForm",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 186,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/auth/AuthForm.tsx",
							"line": 28,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A reusable authentication form component for user login and sign-up.\nIt supports invite-code based sign-up and redirects to the admin page on successful login."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered authentication form."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/auth/AuthForm.tsx",
									"line": 28,
									"character": 24
								}
							],
							"parameters": [
								{
									"id": 188,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The component props."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "rtsv",
											"packagePath": "src/components/auth/AuthForm.tsx",
											"qualifiedName": "AuthFormProps"
										},
										"name": "AuthFormProps",
										"package": "rtsv"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						186
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/auth/AuthForm.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 156,
			"name": "components/layout/Header",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 189,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/layout/Header.tsx",
							"line": 15,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Header component for the application.\nDisplays navigation links, user's email (if logged in), and login/logout buttons.\nProvides a link to the invite code management page for authenticated users."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered header component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/layout/Header.tsx",
									"line": 15,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						189
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/Header.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 157,
			"name": "components/ui/button",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 199,
					"name": "buttonVariants",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the styling variants for the Button component."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/components/ui/button.tsx",
							"line": 13,
							"character": 6
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 200,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "node_modules/class-variance-authority/dist/index.d.ts",
									"line": 35,
									"character": 72
								}
							],
							"signatures": [
								{
									"id": 201,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "node_modules/class-variance-authority/dist/index.d.ts",
											"line": 35,
											"character": 72
										}
									],
									"parameters": [
										{
											"id": 202,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "unknown",
												"name": "ConfigVariants<{ variant: { default: string; destructive: string; outline: string; secondary: string; ghost: string; link: string; }; size: { default: string; sm: string; lg: string; icon: string; }; }> & ClassProp"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 191,
					"name": "Button",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/button.tsx",
							"line": 53,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "Button",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents a customizable button component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered button component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/button.tsx",
									"line": 53,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 193,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the button."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.ClassAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "ClassAttributes",
												"package": "@types/react",
												"qualifiedName": "React.ClassAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"variant": [
														{
															"kind": "text",
															"text": "The button's visual style."
														}
													],
													"size": [
														{
															"kind": "text",
															"text": "The button's size."
														}
													],
													"asChild": [
														{
															"kind": "text",
															"text": "If true, renders the child component as a button."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.ButtonHTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "ButtonHTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.ButtonHTMLAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"variant": [
														{
															"kind": "text",
															"text": "The button's visual style."
														}
													],
													"size": [
														{
															"kind": "text",
															"text": "The button's size."
														}
													],
													"asChild": [
														{
															"kind": "text",
															"text": "If true, renders the child component as a button."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "class-variance-authority",
													"packagePath": "dist/index.d.ts",
													"qualifiedName": "VariantProps"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 194,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/class-variance-authority/dist/index.d.ts",
																	"line": 35,
																	"character": 72
																}
															],
															"signatures": [
																{
																	"id": 195,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "node_modules/class-variance-authority/dist/index.d.ts",
																			"line": 35,
																			"character": 72
																		}
																	],
																	"parameters": [
																		{
																			"id": 196,
																			"name": "props",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "unknown",
																				"name": "ConfigVariants<{ variant: { default: string; destructive: string; outline: string; secondary: string; ghost: string; link: string; }; size: { default: string; sm: string; lg: string; icon: string; }; }> & ClassProp"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												],
												"name": "VariantProps",
												"package": "class-variance-authority",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"variant": [
														{
															"kind": "text",
															"text": "The button's visual style."
														}
													],
													"size": [
														{
															"kind": "text",
															"text": "The button's size."
														}
													],
													"asChild": [
														{
															"kind": "text",
															"text": "If true, renders the child component as a button."
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 197,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 198,
															"name": "asChild",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "If true, renders the child component as a button."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "src/components/ui/button.tsx",
																	"line": 61,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																198
															]
														}
													],
													"sources": [
														{
															"fileName": "src/components/ui/button.tsx",
															"line": 60,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						199
					]
				},
				{
					"title": "Functions",
					"children": [
						191
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/button.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 158,
			"name": "components/ui/card",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 203,
					"name": "Card",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 11,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "Card",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 11,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 205,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "CardAction",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 81,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "CardAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders an action area within a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card action component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 81,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 217,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card action."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "CardContent",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 100,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "CardContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the content area of a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card content component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 100,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 223,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card content."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 218,
					"name": "CardDescription",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 65,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "CardDescription",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the description of a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card description component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 65,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 220,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card description."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "CardFooter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 116,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 210,
							"name": "CardFooter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the footer of a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card footer component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 116,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 211,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card footer."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 206,
					"name": "CardHeader",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 30,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "CardHeader",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the header of a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card header component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 30,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 208,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card header."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 212,
					"name": "CardTitle",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/card.tsx",
							"line": 49,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 213,
							"name": "CardTitle",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the title of a card component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered card title component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/card.tsx",
									"line": 49,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 214,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the card title."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.HTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.HTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						203,
						215,
						221,
						218,
						209,
						206,
						212
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/card.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 159,
			"name": "components/ui/checkbox",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 224,
					"name": "Checkbox",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/checkbox.tsx",
							"line": 15,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "Checkbox",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable checkbox component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered checkbox component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/checkbox.tsx",
									"line": 15,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 226,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the checkbox."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-checkbox",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "CheckboxProps"
												},
												"name": "CheckboxProps",
												"package": "@radix-ui/react-checkbox",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						224
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/checkbox.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 160,
			"name": "components/ui/collapsible",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 227,
					"name": "Collapsible",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/collapsible.tsx",
							"line": 10,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "Collapsible",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A collapsible component that can be opened and closed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered collapsible component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/collapsible.tsx",
									"line": 10,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 229,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the collapsible component."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-collapsible",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "CollapsibleProps"
												},
												"name": "CollapsibleProps",
												"package": "@radix-ui/react-collapsible"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 233,
					"name": "CollapsibleContent",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/collapsible.tsx",
							"line": 37,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 234,
							"name": "CollapsibleContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The content of a collapsible component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered collapsible content component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/collapsible.tsx",
									"line": 37,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 235,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the collapsible content."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-collapsible",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "CollapsibleContentProps"
												},
												"name": "CollapsibleContentProps",
												"package": "@radix-ui/react-collapsible"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 230,
					"name": "CollapsibleTrigger",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/collapsible.tsx",
							"line": 21,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "CollapsibleTrigger",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The trigger for a collapsible component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered collapsible trigger component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/collapsible.tsx",
									"line": 21,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 232,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the collapsible trigger."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-collapsible",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "CollapsibleTriggerProps"
												},
												"name": "CollapsibleTriggerProps",
												"package": "@radix-ui/react-collapsible"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						227,
						233,
						230
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/collapsible.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 161,
			"name": "components/ui/input",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 236,
					"name": "Input",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/input.tsx",
							"line": 12,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "Input",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable input component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered input component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/input.tsx",
									"line": 12,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 238,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the input."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.InputHTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLInputElement"
														},
														"name": "HTMLInputElement",
														"package": "typescript"
													}
												],
												"name": "InputHTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.InputHTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											],
											"type": [
												{
													"kind": "text",
													"text": "The type of the input."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						236
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/input.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 162,
			"name": "components/ui/label",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 239,
					"name": "Label",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/label.tsx",
							"line": 14,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "Label",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable label component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered label component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/label.tsx",
									"line": 14,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 241,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the label."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-label",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "LabelProps"
												},
												"name": "LabelProps",
												"package": "@radix-ui/react-label",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLLabelElement"
														},
														"name": "HTMLLabelElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						239
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/label.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 163,
			"name": "components/ui/radio-group",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 242,
					"name": "RadioGroup",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/radio-group.tsx",
							"line": 15,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "RadioGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable radio group component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered radio group component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/radio-group.tsx",
									"line": 15,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 244,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the radio group."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-radio-group",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "RadioGroupProps"
												},
												"name": "RadioGroupProps",
												"package": "@radix-ui/react-radio-group",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "RadioGroupItem",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/radio-group.tsx",
							"line": 34,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "RadioGroupItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable radio group item component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered radio group item component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/radio-group.tsx",
									"line": 34,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 247,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the radio group item."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-radio-group",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "RadioGroupItemProps"
												},
												"name": "RadioGroupItemProps",
												"package": "@radix-ui/react-radio-group",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						242,
						245
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/radio-group.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 164,
			"name": "components/ui/select",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 248,
					"name": "Select",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 14,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "Select",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 14,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 250,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select component."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectSharedProps"
												},
												"name": "SelectSharedProps",
												"package": "@radix-ui/react-select"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 251,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/@radix-ui/react-select/dist/index.d.mts",
															"line": 23,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "SelectContent",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 84,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "SelectContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the content area of a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select content component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 84,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 254,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select content."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectContentProps"
												},
												"name": "SelectContentProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the content."
														}
													],
													"position": [
														{
															"kind": "text",
															"text": "The positioning strategy for the content."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the content."
														}
													],
													"position": [
														{
															"kind": "text",
															"text": "The positioning strategy for the content."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 255,
					"name": "SelectGroup",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 25,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "SelectGroup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a group of select items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select group component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 25,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 257,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select group."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectGroupProps"
												},
												"name": "SelectGroupProps",
												"package": "@radix-ui/react-select"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 258,
					"name": "SelectItem",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 145,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "SelectItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a selectable item within a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select item component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 145,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 260,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select item."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectItemProps"
												},
												"name": "SelectItemProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the item."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the item."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 261,
					"name": "SelectLabel",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 125,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "SelectLabel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a label for a select item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select label component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 125,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 263,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select label."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectLabelProps"
												},
												"name": "SelectLabelProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "SelectScrollDownButton",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 218,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "SelectScrollDownButton",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a scroll-down button for a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered scroll-down button component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 218,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 266,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the scroll-down button."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectScrollDownButtonProps"
												},
												"name": "SelectScrollDownButtonProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 267,
					"name": "SelectScrollUpButton",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 194,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "SelectScrollUpButton",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a scroll-up button for a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered scroll-up button component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 194,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 269,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the scroll-up button."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectScrollUpButtonProps"
												},
												"name": "SelectScrollUpButtonProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 270,
					"name": "SelectSeparator",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 175,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 271,
							"name": "SelectSeparator",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a separator within a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select separator component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 175,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 272,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select separator."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectSeparatorProps"
												},
												"name": "SelectSeparatorProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 273,
					"name": "SelectTrigger",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 50,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "SelectTrigger",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the trigger button for a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select trigger component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 50,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 275,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select trigger."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectTriggerProps"
												},
												"name": "SelectTriggerProps",
												"package": "@radix-ui/react-select",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"size": [
														{
															"kind": "text",
															"text": "The size of the trigger."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the trigger."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"size": [
														{
															"kind": "text",
															"text": "The size of the trigger."
														}
													],
													"children": [
														{
															"kind": "text",
															"text": "The children to be rendered inside the trigger."
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 276,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 277,
															"name": "size",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The size of the trigger."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "src/components/ui/select.tsx",
																	"line": 56,
																	"character": 2
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "sm"
																	},
																	{
																		"type": "literal",
																		"value": "default"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																277
															]
														}
													],
													"sources": [
														{
															"fileName": "src/components/ui/select.tsx",
															"line": 55,
															"character": 58
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "SelectValue",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/select.tsx",
							"line": 36,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "SelectValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the selected value of a select component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered select value component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/select.tsx",
									"line": 36,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 280,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the select value."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-select",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SelectValueProps"
												},
												"name": "SelectValueProps",
												"package": "@radix-ui/react-select"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLSpanElement"
														},
														"name": "HTMLSpanElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						248,
						252,
						255,
						258,
						261,
						264,
						267,
						270,
						273,
						278
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/select.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 165,
			"name": "components/ui/separator",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 281,
					"name": "Separator",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/separator.tsx",
							"line": 16,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "Separator",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable separator component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered separator component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/separator.tsx",
									"line": 16,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 283,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the separator."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-separator",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "SeparatorProps"
												},
												"name": "SeparatorProps",
												"package": "@radix-ui/react-separator",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"orientation": [
														{
															"kind": "text",
															"text": "The orientation of the separator."
														}
													],
													"decorative": [
														{
															"kind": "text",
															"text": "Whether the separator is decorative."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													],
													"orientation": [
														{
															"kind": "text",
															"text": "The orientation of the separator."
														}
													],
													"decorative": [
														{
															"kind": "text",
															"text": "Whether the separator is decorative."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						281
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/separator.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 166,
			"name": "components/ui/sonner",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 284,
					"name": "Toaster",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/sonner.tsx",
							"line": 11,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "Toaster",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable toaster component for displaying notifications."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered toaster component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/sonner.tsx",
									"line": 11,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 286,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the toaster."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "sonner",
											"packagePath": "dist/index.d.mts",
											"qualifiedName": "ToasterProps"
										},
										"name": "ToasterProps",
										"package": "sonner"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						284
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/sonner.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 167,
			"name": "components/ui/tabs",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 287,
					"name": "Tabs",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/tabs.tsx",
							"line": 14,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "Tabs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable tabs component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered tabs component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/tabs.tsx",
									"line": 14,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 289,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the tabs component."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-tabs",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "TabsProps"
												},
												"name": "TabsProps",
												"package": "@radix-ui/react-tabs",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 296,
					"name": "TabsContent",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/tabs.tsx",
							"line": 77,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "TabsContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the content associated with a tab."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered tab content component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/tabs.tsx",
									"line": 77,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 298,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the tab content."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-tabs",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "TabsContentProps"
												},
												"name": "TabsContentProps",
												"package": "@radix-ui/react-tabs",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "TabsList",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/tabs.tsx",
							"line": 33,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "TabsList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a list of tabs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered tabs list component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/tabs.tsx",
									"line": 33,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 292,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the tabs list."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-tabs",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "TabsListProps"
												},
												"name": "TabsListProps",
												"package": "@radix-ui/react-tabs",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 293,
					"name": "TabsTrigger",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/tabs.tsx",
							"line": 55,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "TabsTrigger",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a trigger button for a tab."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered tab trigger component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/tabs.tsx",
									"line": 55,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 295,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the tab trigger."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "@radix-ui/react-tabs",
													"packagePath": "dist/index.d.mts",
													"qualifiedName": "TabsTriggerProps"
												},
												"name": "TabsTriggerProps",
												"package": "@radix-ui/react-tabs",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes",
												"highlightedProperties": {
													"className": [
														{
															"kind": "text",
															"text": "Additional CSS classes."
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						287,
						296,
						290,
						293
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/tabs.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 168,
			"name": "components/ui/textarea",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 299,
					"name": "Textarea",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/ui/textarea.tsx",
							"line": 11,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "Textarea",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a customizable textarea component."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rendered textarea component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/components/ui/textarea.tsx",
									"line": 11,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 301,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The properties of the textarea."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.DetailedHTMLProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.TextareaHTMLAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLTextAreaElement"
														},
														"name": "HTMLTextAreaElement",
														"package": "typescript"
													}
												],
												"name": "TextareaHTMLAttributes",
												"package": "@types/react",
												"qualifiedName": "React.TextareaHTMLAttributes"
											}
										],
										"name": "DetailedHTMLProps",
										"package": "@types/react",
										"qualifiedName": "React.DetailedHTMLProps",
										"highlightedProperties": {
											"className": [
												{
													"kind": "text",
													"text": "Additional CSS classes."
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ui/textarea.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 144,
			"name": "context/AuthContext",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 145,
					"name": "AuthProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/context/AuthContext.tsx",
							"line": 31,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "AuthProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides authentication context to its children components.\nIt fetches the initial user session and listens for authentication state changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The AuthProvider component."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/context/AuthContext.tsx",
									"line": 31,
									"character": 28
								}
							],
							"parameters": [
								{
									"id": 147,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The component props."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 148,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 149,
													"name": "children",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The child components to be wrapped by the provider."
															}
														]
													},
													"sources": [
														{
															"fileName": "src/context/AuthContext.tsx",
															"line": 31,
															"character": 45
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														149
													]
												}
											],
											"sources": [
												{
													"fileName": "src/context/AuthContext.tsx",
													"line": 31,
													"character": 43
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 150,
					"name": "useAuth",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/context/AuthContext.tsx",
							"line": 76,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 151,
							"name": "useAuth",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom hook to access the authentication context.\nThrows an error if used outside of an AuthProvider."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authentication context values (user and loading state)."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If used outside of an AuthProvider."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/context/AuthContext.tsx",
									"line": 76,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "rtsv",
									"packagePath": "src/context/AuthContext.tsx",
									"qualifiedName": "AuthContextType"
								},
								"name": "AuthContextType",
								"package": "rtsv"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						145,
						150
					]
				}
			],
			"sources": [
				{
					"fileName": "src/context/AuthContext.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "hooks/useAdminQuestions",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "useAdminQuestions",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/hooks/useAdminQuestions.ts",
							"line": 33,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "useAdminQuestions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom hook for managing admin-related question and answer logic.\nHandles fetching, adding, deleting, toggling questions, and managing free-text answer states."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "src/hooks/useAdminQuestions.ts",
									"line": 33,
									"character": 33
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "eventId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event being managed."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6,
											"name": "event",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 34,
													"character": 2
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": 93,
														"name": "Event",
														"package": "rtsv"
													}
												]
											}
										},
										{
											"id": 20,
											"name": "expandedQuestionId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 45,
													"character": 2
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 25,
											"name": "handleAddQuestion",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 47,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 26,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 47,
															"character": 21
														}
													],
													"signatures": [
														{
															"id": 27,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 47,
																	"character": 21
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 28,
											"name": "handleDeleteQuestion",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 48,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 48,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 30,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 48,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 31,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 49,
											"name": "handleDisplayQuestion",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 52,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 50,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 52,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 51,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 52,
																	"character": 25
																}
															],
															"parameters": [
																{
																	"id": 52,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 43,
											"name": "handleHideAnswerToggle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 51,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 44,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 51,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 45,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 51,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 46,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 47,
																	"name": "answerId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 48,
																	"name": "isHidden",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 53,
											"name": "handleHideDisplayQuestion",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 53,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 54,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 53,
															"character": 29
														}
													],
													"signatures": [
														{
															"id": 55,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 53,
																	"character": 29
																}
															],
															"parameters": [
																{
																	"id": 56,
																	"name": "eventId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 37,
											"name": "handlePickAnswerToggle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 50,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 50,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 39,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 50,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 40,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 41,
																	"name": "answerId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 42,
																	"name": "isPicked",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 21,
											"name": "handleToggleExpand",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 46,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 22,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 46,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 23,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 46,
																	"character": 22
																}
															],
															"parameters": [
																{
																	"id": 24,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 32,
											"name": "handleToggleQuestion",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 49,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 33,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 49,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 34,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 49,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 35,
																	"name": "questionId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 36,
																	"name": "isOpen",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 18,
											"name": "newQuestionAllowMultipleAnswers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 43,
													"character": 2
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16,
											"name": "newQuestionOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 41,
													"character": 2
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 12,
											"name": "newQuestionText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 37,
													"character": 2
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14,
											"name": "newQuestionType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 39,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": 97,
												"name": "QuestionType",
												"package": "rtsv"
											}
										},
										{
											"id": 8,
											"name": "questionResults",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 36,
													"character": 2
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 9,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/useAdminQuestions.ts",
															"line": 36,
															"character": 19
														}
													],
													"indexSignatures": [
														{
															"id": 10,
															"name": "__index",
															"variant": "signature",
															"kind": 8192,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/useAdminQuestions.ts",
																	"line": 36,
																	"character": 21
																}
															],
															"parameters": [
																{
																	"id": 11,
																	"name": "key",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 115,
																	"name": "QuestionResult",
																	"package": "rtsv"
																}
															}
														}
													]
												}
											}
										},
										{
											"id": 7,
											"name": "questions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 35,
													"character": 2
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 98,
													"name": "Question",
													"package": "rtsv"
												}
											}
										},
										{
											"id": 19,
											"name": "setNewQuestionAllowMultipleAnswers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 44,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.Dispatch"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.SetStateAction"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "SetStateAction",
														"package": "@types/react",
														"qualifiedName": "React.SetStateAction"
													}
												],
												"name": "Dispatch",
												"package": "@types/react",
												"qualifiedName": "React.Dispatch"
											}
										},
										{
											"id": 17,
											"name": "setNewQuestionOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 42,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.Dispatch"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.SetStateAction"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "SetStateAction",
														"package": "@types/react",
														"qualifiedName": "React.SetStateAction"
													}
												],
												"name": "Dispatch",
												"package": "@types/react",
												"qualifiedName": "React.Dispatch"
											}
										},
										{
											"id": 13,
											"name": "setNewQuestionText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 38,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.Dispatch"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.SetStateAction"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "SetStateAction",
														"package": "@types/react",
														"qualifiedName": "React.SetStateAction"
													}
												],
												"name": "Dispatch",
												"package": "@types/react",
												"qualifiedName": "React.Dispatch"
											}
										},
										{
											"id": 15,
											"name": "setNewQuestionType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useAdminQuestions.ts",
													"line": 40,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.Dispatch"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.SetStateAction"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 97,
																"name": "QuestionType",
																"package": "rtsv"
															}
														],
														"name": "SetStateAction",
														"package": "@types/react",
														"qualifiedName": "React.SetStateAction"
													}
												],
												"name": "Dispatch",
												"package": "@types/react",
												"qualifiedName": "React.Dispatch"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6,
												20,
												25,
												28,
												49,
												43,
												53,
												37,
												21,
												32,
												18,
												16,
												12,
												14,
												8,
												7,
												19,
												17,
												13,
												15
											]
										}
									],
									"sources": [
										{
											"fileName": "src/hooks/useAdminQuestions.ts",
											"line": 33,
											"character": 64
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/hooks/useAdminQuestions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 57,
			"name": "hooks/useInviteCodes",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 58,
					"name": "useInviteCodes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/hooks/useInviteCodes.ts",
							"line": 48,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "useInviteCodes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom hook for managing invite codes.\nProvides functionality to fetch, add, and manage the state of invite codes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object containing invite codes data, loading state, error, and functions to manipulate invite codes."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/hooks/useInviteCodes.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "rtsv",
									"packagePath": "src/hooks/useInviteCodes.ts",
									"qualifiedName": "UseInviteCodesResult"
								},
								"name": "UseInviteCodesResult",
								"package": "rtsv"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "src/hooks/useInviteCodes.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 60,
			"name": "hooks/usePresenterData",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 61,
					"name": "usePresenterData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/hooks/usePresenterData.ts",
							"line": 18,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "usePresenterData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom hook for managing presenter view data.\nHandles fetching event data, questions, and real-time updates for question display and results."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "src/hooks/usePresenterData.ts",
									"line": 18,
									"character": 32
								}
							],
							"parameters": [
								{
									"id": 63,
									"name": "eventId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 64,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 67,
											"name": "currentDisplayedQuestionId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/usePresenterData.ts",
													"line": 96,
													"character": 38
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 66,
											"name": "displayedQuestions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/usePresenterData.ts",
													"line": 96,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 98,
													"name": "Question",
													"package": "rtsv"
												}
											}
										},
										{
											"id": 65,
											"name": "event",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/usePresenterData.ts",
													"line": 96,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 93,
														"name": "Event",
														"package": "rtsv"
													}
												]
											}
										},
										{
											"id": 72,
											"name": "loading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/usePresenterData.ts",
													"line": 96,
													"character": 83
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 68,
											"name": "questionResults",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/usePresenterData.ts",
													"line": 96,
													"character": 66
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 69,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/hooks/usePresenterData.ts",
															"line": 22,
															"character": 57
														}
													],
													"indexSignatures": [
														{
															"id": 70,
															"name": "__index",
															"variant": "signature",
															"kind": 8192,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/hooks/usePresenterData.ts",
																	"line": 22,
																	"character": 59
																}
															],
															"parameters": [
																{
																	"id": 71,
																	"name": "key",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 115,
																	"name": "QuestionResult",
																	"package": "rtsv"
																}
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												67,
												66,
												65,
												72,
												68
											]
										}
									],
									"sources": [
										{
											"fileName": "src/hooks/usePresenterData.ts",
											"line": 96,
											"character": 9
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						61
					]
				}
			],
			"sources": [
				{
					"fileName": "src/hooks/usePresenterData.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 73,
			"name": "hooks/useSocket",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 74,
					"name": "useSocket",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/hooks/useSocket.ts",
							"line": 10,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "useSocket",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom React hook for managing a Socket.IO client connection.\nIt handles connection, disconnection, and room joining for a given eventId."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object containing the Socket.IO client instance and the connection status."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/hooks/useSocket.ts",
									"line": 10,
									"character": 25
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "eventId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event to join. If null, no connection is attempted."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 77,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 79,
											"name": "isConnected",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useSocket.ts",
													"line": 10,
													"character": 76
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 78,
											"name": "socket",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/hooks/useSocket.ts",
													"line": 10,
													"character": 53
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"packageName": "socket.io-client",
															"packagePath": "build/esm/socket.d.ts",
															"qualifiedName": "Socket"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@socket.io/component-emitter",
																	"packagePath": "lib/cjs/index.d.ts",
																	"qualifiedName": "DefaultEventsMap"
																},
																"name": "DefaultEventsMap",
																"package": "@socket.io/component-emitter"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "@socket.io/component-emitter",
																	"packagePath": "lib/cjs/index.d.ts",
																	"qualifiedName": "DefaultEventsMap"
																},
																"name": "DefaultEventsMap",
																"package": "@socket.io/component-emitter"
															}
														],
														"name": "Socket",
														"package": "socket.io-client"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												79,
												78
											]
										}
									],
									"sources": [
										{
											"fileName": "src/hooks/useSocket.ts",
											"line": 10,
											"character": 51
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						74
					]
				}
			],
			"sources": [
				{
					"fileName": "src/hooks/useSocket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 80,
			"name": "lib/questionUtils",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 81,
					"name": "getQuestionTypeLabel",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/questionUtils.ts",
							"line": 8,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "getQuestionTypeLabel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a user-friendly label for a given question type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The label for the question type."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/questionUtils.ts",
									"line": 8,
									"character": 36
								}
							],
							"parameters": [
								{
									"id": 83,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The question type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 97,
										"name": "QuestionType",
										"package": "rtsv"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/questionUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 84,
			"name": "lib/supabaseClient",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 85,
					"name": "supabase",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Supabaseクライアントインスタンス。\n環境変数からURLと匿名キーを読み込み、Supabaseクライアントを作成します。"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/supabaseClient.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@supabase/supabase-js",
							"packagePath": "src/SupabaseClient.ts",
							"qualifiedName": "default"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "literal",
								"value": "public"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "SupabaseClient",
						"package": "@supabase/supabase-js",
						"qualifiedName": "default"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						85
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/supabaseClient.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 86,
			"name": "lib/utils",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 87,
					"name": "cn",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils.ts",
							"line": 4,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "cn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/utils.ts",
									"line": 4,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 89,
									"name": "inputs",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "clsx",
												"packagePath": "clsx.d.mts",
												"qualifiedName": "ClassValue"
											},
											"name": "ClassValue",
											"package": "clsx"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 90,
					"name": "getSessionId",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils.ts",
							"line": 8,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 91,
							"name": "getSessionId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/utils.ts",
									"line": 8,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						87,
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 124,
			"name": "pages/api/socket",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 125,
					"name": "config",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/pages/api/socket.ts",
							"line": 107,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 126,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 127,
									"name": "api",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/pages/api/socket.ts",
											"line": 108,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 128,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 129,
													"name": "bodyParser",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/pages/api/socket.ts",
															"line": 109,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												},
												{
													"id": 130,
													"name": "externalResolver",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/pages/api/socket.ts",
															"line": 110,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														129,
														130
													]
												}
											],
											"sources": [
												{
													"fileName": "src/pages/api/socket.ts",
													"line": 108,
													"character": 7
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										127
									]
								}
							],
							"sources": [
								{
									"fileName": "src/pages/api/socket.ts",
									"line": 107,
									"character": 22
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 314,
					"name": "default",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/pages/api/socket.ts",
							"line": 17,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 315,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/pages/api/socket.ts",
									"line": 17,
									"character": 22
								}
							],
							"parameters": [
								{
									"id": 316,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "next",
											"packagePath": "dist/shared/lib/utils.d.ts",
											"qualifiedName": "NextApiRequest"
										},
										"name": "NextApiRequest",
										"package": "next"
									}
								},
								{
									"id": 317,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "rtsv",
											"packagePath": "src/pages/api/socket.ts",
											"qualifiedName": "NextApiResponseWithSocket"
										},
										"name": "NextApiResponseWithSocket",
										"package": "rtsv"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						125
					]
				},
				{
					"title": "Functions",
					"children": [
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "src/pages/api/socket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 92,
			"name": "types",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 112,
					"name": "ChoiceAnswerResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the result of a multiple-choice or multiple-select answer."
							}
						]
					},
					"children": [
						{
							"id": 114,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 49,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 113,
							"name": "option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								114,
								113
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 47,
							"character": 17
						}
					]
				},
				{
					"id": 116,
					"name": "DisplayDataItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a data item for display purposes in charts or lists.\nIt combines properties from FreeTextAnswerResult and ChoiceAnswerResult."
							}
						]
					},
					"children": [
						{
							"id": 118,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 119,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 121,
							"name": "is_hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 120,
							"name": "is_picked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 117,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 122,
							"name": "option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								118,
								119,
								121,
								120,
								117,
								122,
								123
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 63,
							"character": 17
						}
					]
				},
				{
					"id": 93,
					"name": "Event",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents an event."
							}
						]
					},
					"children": [
						{
							"id": 96,
							"name": "access_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 94,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 95,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								96,
								94,
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 5,
							"character": 17
						}
					]
				},
				{
					"id": 107,
					"name": "FreeTextAnswerResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the result of a free-text answer."
							}
						]
					},
					"children": [
						{
							"id": 108,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 111,
							"name": "is_hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 110,
							"name": "is_picked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 109,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								108,
								111,
								110,
								109
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 36,
							"character": 17
						}
					]
				},
				{
					"id": 98,
					"name": "Question",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a question."
							}
						]
					},
					"children": [
						{
							"id": 105,
							"name": "allow_multiple_answers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 106,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 100,
							"name": "event_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 99,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 104,
							"name": "is_open",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 27,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 103,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 102,
							"name": "question_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 97,
								"name": "QuestionType",
								"package": "rtsv"
							}
						},
						{
							"id": 101,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/index.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								105,
								106,
								100,
								99,
								104,
								103,
								102,
								101
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 21,
							"character": 17
						}
					]
				},
				{
					"id": 115,
					"name": "QuestionResult",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a union type for question results."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 107,
								"name": "FreeTextAnswerResult",
								"package": "rtsv"
							},
							{
								"type": "reference",
								"target": 112,
								"name": "ChoiceAnswerResult",
								"package": "rtsv"
							}
						]
					}
				},
				{
					"id": 97,
					"name": "QuestionType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the possible types of questions."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/index.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "multiple-choice"
							},
							{
								"type": "literal",
								"value": "multiple-select"
							},
							{
								"type": "literal",
								"value": "free-text"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						112,
						116,
						93,
						107,
						98
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						115,
						97
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				169,
				170,
				152,
				131,
				171,
				172,
				173,
				140,
				142,
				174,
				153,
				154,
				143,
				155,
				156,
				157,
				158,
				159,
				160,
				161,
				162,
				163,
				164,
				165,
				166,
				167,
				168,
				144,
				1,
				57,
				60,
				73,
				80,
				84,
				86,
				124,
				92
			]
		}
	],
	"symbolIdMap": {
		"1": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": ""
		},
		"2": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "useAdminQuestions"
		},
		"3": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "useAdminQuestions"
		},
		"4": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "eventId"
		},
		"5": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"6": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.event"
		},
		"7": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.questions"
		},
		"8": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.questionResults"
		},
		"9": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"10": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.__index"
		},
		"12": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.newQuestionText"
		},
		"13": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.setNewQuestionText"
		},
		"14": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.newQuestionType"
		},
		"15": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.setNewQuestionType"
		},
		"16": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.newQuestionOptions"
		},
		"17": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.setNewQuestionOptions"
		},
		"18": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.newQuestionAllowMultipleAnswers"
		},
		"19": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.setNewQuestionAllowMultipleAnswers"
		},
		"20": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.expandedQuestionId"
		},
		"21": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleToggleExpand"
		},
		"22": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"23": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"25": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleAddQuestion"
		},
		"26": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"27": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"28": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleDeleteQuestion"
		},
		"29": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"32": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleToggleQuestion"
		},
		"33": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"35": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"36": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "isOpen"
		},
		"37": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handlePickAnswerToggle"
		},
		"38": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"40": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"41": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "answerId"
		},
		"42": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "isPicked"
		},
		"43": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleHideAnswerToggle"
		},
		"44": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"45": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"46": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"47": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "answerId"
		},
		"48": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "isHidden"
		},
		"49": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleDisplayQuestion"
		},
		"50": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"52": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "questionId"
		},
		"53": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type.handleHideDisplayQuestion"
		},
		"54": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"55": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "__type"
		},
		"56": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useAdminQuestions.ts",
			"qualifiedName": "eventId"
		},
		"57": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useInviteCodes.ts",
			"qualifiedName": ""
		},
		"58": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useInviteCodes.ts",
			"qualifiedName": "useInviteCodes"
		},
		"59": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useInviteCodes.ts",
			"qualifiedName": "useInviteCodes"
		},
		"60": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": ""
		},
		"61": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "usePresenterData"
		},
		"62": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "usePresenterData"
		},
		"63": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "eventId"
		},
		"64": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object"
		},
		"65": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object.event"
		},
		"66": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object.displayedQuestions"
		},
		"67": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object.currentDisplayedQuestionId"
		},
		"68": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object.questionResults"
		},
		"69": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__type"
		},
		"70": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__type.__index"
		},
		"72": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/usePresenterData.ts",
			"qualifiedName": "__object.loading"
		},
		"73": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": ""
		},
		"74": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "useSocket"
		},
		"75": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "useSocket"
		},
		"76": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "eventId"
		},
		"77": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "__type"
		},
		"78": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "__type.socket"
		},
		"79": {
			"packageName": "rtsv",
			"packagePath": "src/hooks/useSocket.ts",
			"qualifiedName": "__type.isConnected"
		},
		"80": {
			"packageName": "rtsv",
			"packagePath": "src/lib/questionUtils.ts",
			"qualifiedName": ""
		},
		"81": {
			"packageName": "rtsv",
			"packagePath": "src/lib/questionUtils.ts",
			"qualifiedName": "getQuestionTypeLabel"
		},
		"82": {
			"packageName": "rtsv",
			"packagePath": "src/lib/questionUtils.ts",
			"qualifiedName": "getQuestionTypeLabel"
		},
		"83": {
			"packageName": "rtsv",
			"packagePath": "src/lib/questionUtils.ts",
			"qualifiedName": "type"
		},
		"84": {
			"packageName": "rtsv",
			"packagePath": "src/lib/supabaseClient.ts",
			"qualifiedName": ""
		},
		"85": {
			"packageName": "rtsv",
			"packagePath": "src/lib/supabaseClient.ts",
			"qualifiedName": "supabase"
		},
		"86": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": ""
		},
		"87": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": "cn"
		},
		"88": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": "cn"
		},
		"89": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": "inputs"
		},
		"90": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": "getSessionId"
		},
		"91": {
			"packageName": "rtsv",
			"packagePath": "src/lib/utils.ts",
			"qualifiedName": "getSessionId"
		},
		"92": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": ""
		},
		"93": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Event"
		},
		"94": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Event.id"
		},
		"95": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Event.name"
		},
		"96": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Event.access_code"
		},
		"97": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "QuestionType"
		},
		"98": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question"
		},
		"99": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.id"
		},
		"100": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.event_id"
		},
		"101": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.text"
		},
		"102": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.question_type"
		},
		"103": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.options"
		},
		"104": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.is_open"
		},
		"105": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.allow_multiple_answers"
		},
		"106": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "Question.created_at"
		},
		"107": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "FreeTextAnswerResult"
		},
		"108": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "FreeTextAnswerResult.id"
		},
		"109": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "FreeTextAnswerResult.text"
		},
		"110": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "FreeTextAnswerResult.is_picked"
		},
		"111": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "FreeTextAnswerResult.is_hidden"
		},
		"112": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "ChoiceAnswerResult"
		},
		"113": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "ChoiceAnswerResult.option"
		},
		"114": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "ChoiceAnswerResult.count"
		},
		"115": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "QuestionResult"
		},
		"116": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem"
		},
		"117": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.name"
		},
		"118": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.count"
		},
		"119": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.id"
		},
		"120": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.is_picked"
		},
		"121": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.is_hidden"
		},
		"122": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.option"
		},
		"123": {
			"packageName": "rtsv",
			"packagePath": "src/types/index.ts",
			"qualifiedName": "DisplayDataItem.text"
		},
		"124": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": ""
		},
		"125": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "config"
		},
		"126": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "__object"
		},
		"127": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "__object.api"
		},
		"128": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "__object"
		},
		"129": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "__object.bodyParser"
		},
		"130": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "__object.externalResolver"
		},
		"131": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": ""
		},
		"132": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "POST"
		},
		"133": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "POST"
		},
		"134": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "request"
		},
		"135": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "GET"
		},
		"136": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "GET"
		},
		"137": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "request"
		},
		"138": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "__object"
		},
		"139": {
			"packageName": "rtsv",
			"packagePath": "src/app/api/invite-codes/route.ts",
			"qualifiedName": "__object.error"
		},
		"140": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": ""
		},
		"141": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "metadata"
		},
		"142": {
			"packageName": "rtsv",
			"packagePath": "src/app/page.tsx",
			"qualifiedName": ""
		},
		"143": {
			"packageName": "rtsv",
			"packagePath": "src/components/AnimatedNumber.tsx",
			"qualifiedName": ""
		},
		"144": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": ""
		},
		"145": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "AuthProvider"
		},
		"146": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "AuthProvider"
		},
		"147": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "__0"
		},
		"148": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "__type"
		},
		"149": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "__type.children"
		},
		"150": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "useAuth"
		},
		"151": {
			"packageName": "rtsv",
			"packagePath": "src/context/AuthContext.tsx",
			"qualifiedName": "useAuth"
		},
		"152": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/page.tsx",
			"qualifiedName": ""
		},
		"153": {
			"packageName": "rtsv",
			"packagePath": "src/components/admin/AdminAddQuestionForm.tsx",
			"qualifiedName": ""
		},
		"154": {
			"packageName": "rtsv",
			"packagePath": "src/components/admin/InviteCodeManager.tsx",
			"qualifiedName": ""
		},
		"155": {
			"packageName": "rtsv",
			"packagePath": "src/components/auth/AuthForm.tsx",
			"qualifiedName": ""
		},
		"156": {
			"packageName": "rtsv",
			"packagePath": "src/components/layout/Header.tsx",
			"qualifiedName": ""
		},
		"157": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": ""
		},
		"158": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": ""
		},
		"159": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/checkbox.tsx",
			"qualifiedName": ""
		},
		"160": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": ""
		},
		"161": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/input.tsx",
			"qualifiedName": ""
		},
		"162": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/label.tsx",
			"qualifiedName": ""
		},
		"163": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": ""
		},
		"164": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": ""
		},
		"165": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/separator.tsx",
			"qualifiedName": ""
		},
		"166": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/sonner.tsx",
			"qualifiedName": ""
		},
		"167": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": ""
		},
		"168": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/textarea.tsx",
			"qualifiedName": ""
		},
		"169": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/[eventId]/page.tsx",
			"qualifiedName": ""
		},
		"170": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/invite-codes/page.tsx",
			"qualifiedName": ""
		},
		"171": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/login/page.tsx",
			"qualifiedName": ""
		},
		"172": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/signup/page.tsx",
			"qualifiedName": ""
		},
		"173": {
			"packageName": "rtsv",
			"packagePath": "src/app/event/[accessCode]/page.tsx",
			"qualifiedName": ""
		},
		"174": {
			"packageName": "rtsv",
			"packagePath": "src/app/presenter/[eventId]/page.tsx",
			"qualifiedName": ""
		},
		"175": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "default"
		},
		"176": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "default"
		},
		"177": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "__0"
		},
		"178": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "__type"
		},
		"179": {
			"packageName": "rtsv",
			"packagePath": "src/app/layout.tsx",
			"qualifiedName": "__type.children"
		},
		"180": {
			"packageName": "rtsv",
			"packagePath": "src/app/page.tsx",
			"qualifiedName": "default"
		},
		"181": {
			"packageName": "rtsv",
			"packagePath": "src/app/page.tsx",
			"qualifiedName": "default"
		},
		"182": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/page.tsx",
			"qualifiedName": "default"
		},
		"183": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/page.tsx",
			"qualifiedName": "default"
		},
		"184": {
			"packageName": "rtsv",
			"packagePath": "src/components/admin/InviteCodeManager.tsx",
			"qualifiedName": "default"
		},
		"185": {
			"packageName": "rtsv",
			"packagePath": "src/components/admin/InviteCodeManager.tsx",
			"qualifiedName": "default"
		},
		"186": {
			"packageName": "rtsv",
			"packagePath": "src/components/auth/AuthForm.tsx",
			"qualifiedName": "default"
		},
		"187": {
			"packageName": "rtsv",
			"packagePath": "src/components/auth/AuthForm.tsx",
			"qualifiedName": "default"
		},
		"188": {
			"packageName": "rtsv",
			"packagePath": "src/components/auth/AuthForm.tsx",
			"qualifiedName": "__0"
		},
		"189": {
			"packageName": "rtsv",
			"packagePath": "src/components/layout/Header.tsx",
			"qualifiedName": "default"
		},
		"190": {
			"packageName": "rtsv",
			"packagePath": "src/components/layout/Header.tsx",
			"qualifiedName": "default"
		},
		"191": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "Button"
		},
		"192": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "Button"
		},
		"193": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "__0"
		},
		"194": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"195": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"196": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "props"
		},
		"197": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "__type"
		},
		"198": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "__type.asChild"
		},
		"199": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/button.tsx",
			"qualifiedName": "buttonVariants"
		},
		"200": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"201": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"202": {
			"packageName": "class-variance-authority",
			"packagePath": "dist/index.d.ts",
			"qualifiedName": "props"
		},
		"203": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "Card"
		},
		"204": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "Card"
		},
		"205": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"206": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardHeader"
		},
		"207": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardHeader"
		},
		"208": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"209": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardFooter"
		},
		"210": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardFooter"
		},
		"211": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"212": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardTitle"
		},
		"213": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardTitle"
		},
		"214": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"215": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardAction"
		},
		"216": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardAction"
		},
		"217": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"218": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardDescription"
		},
		"219": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardDescription"
		},
		"220": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"221": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardContent"
		},
		"222": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "CardContent"
		},
		"223": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/card.tsx",
			"qualifiedName": "__0"
		},
		"224": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/checkbox.tsx",
			"qualifiedName": "Checkbox"
		},
		"225": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/checkbox.tsx",
			"qualifiedName": "Checkbox"
		},
		"226": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/checkbox.tsx",
			"qualifiedName": "__0"
		},
		"227": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "Collapsible"
		},
		"228": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "Collapsible"
		},
		"229": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "__0"
		},
		"230": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "CollapsibleTrigger"
		},
		"231": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "CollapsibleTrigger"
		},
		"232": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "__0"
		},
		"233": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "CollapsibleContent"
		},
		"234": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "CollapsibleContent"
		},
		"235": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/collapsible.tsx",
			"qualifiedName": "__0"
		},
		"236": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/input.tsx",
			"qualifiedName": "Input"
		},
		"237": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/input.tsx",
			"qualifiedName": "Input"
		},
		"238": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/input.tsx",
			"qualifiedName": "__0"
		},
		"239": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/label.tsx",
			"qualifiedName": "Label"
		},
		"240": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/label.tsx",
			"qualifiedName": "Label"
		},
		"241": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/label.tsx",
			"qualifiedName": "__0"
		},
		"242": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "RadioGroup"
		},
		"243": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "RadioGroup"
		},
		"244": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "__0"
		},
		"245": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "RadioGroupItem"
		},
		"246": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "RadioGroupItem"
		},
		"247": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/radio-group.tsx",
			"qualifiedName": "__0"
		},
		"248": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "Select"
		},
		"249": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "Select"
		},
		"250": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"251": {
			"packageName": "@radix-ui/react-select",
			"packagePath": "dist/index.d.mts",
			"qualifiedName": "__type"
		},
		"252": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectContent"
		},
		"253": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectContent"
		},
		"254": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"255": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectGroup"
		},
		"256": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectGroup"
		},
		"257": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"258": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectItem"
		},
		"259": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectItem"
		},
		"260": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"261": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectLabel"
		},
		"262": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectLabel"
		},
		"263": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"264": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectScrollDownButton"
		},
		"265": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectScrollDownButton"
		},
		"266": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"267": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectScrollUpButton"
		},
		"268": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectScrollUpButton"
		},
		"269": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"270": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectSeparator"
		},
		"271": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectSeparator"
		},
		"272": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"273": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectTrigger"
		},
		"274": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectTrigger"
		},
		"275": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"276": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__type"
		},
		"277": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__type.size"
		},
		"278": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectValue"
		},
		"279": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "SelectValue"
		},
		"280": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/select.tsx",
			"qualifiedName": "__0"
		},
		"281": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/separator.tsx",
			"qualifiedName": "Separator"
		},
		"282": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/separator.tsx",
			"qualifiedName": "Separator"
		},
		"283": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/separator.tsx",
			"qualifiedName": "__0"
		},
		"284": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/sonner.tsx",
			"qualifiedName": "Toaster"
		},
		"285": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/sonner.tsx",
			"qualifiedName": "Toaster"
		},
		"286": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/sonner.tsx",
			"qualifiedName": "__0"
		},
		"287": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "Tabs"
		},
		"288": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "Tabs"
		},
		"289": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "__0"
		},
		"290": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsList"
		},
		"291": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsList"
		},
		"292": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "__0"
		},
		"293": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsTrigger"
		},
		"294": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsTrigger"
		},
		"295": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "__0"
		},
		"296": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsContent"
		},
		"297": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "TabsContent"
		},
		"298": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/tabs.tsx",
			"qualifiedName": "__0"
		},
		"299": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/textarea.tsx",
			"qualifiedName": "Textarea"
		},
		"300": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/textarea.tsx",
			"qualifiedName": "Textarea"
		},
		"301": {
			"packageName": "rtsv",
			"packagePath": "src/components/ui/textarea.tsx",
			"qualifiedName": "__0"
		},
		"302": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/[eventId]/page.tsx",
			"qualifiedName": "default"
		},
		"303": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/[eventId]/page.tsx",
			"qualifiedName": "default"
		},
		"304": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/invite-codes/page.tsx",
			"qualifiedName": "default"
		},
		"305": {
			"packageName": "rtsv",
			"packagePath": "src/app/admin/invite-codes/page.tsx",
			"qualifiedName": "default"
		},
		"306": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/login/page.tsx",
			"qualifiedName": "default"
		},
		"307": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/login/page.tsx",
			"qualifiedName": "default"
		},
		"308": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/signup/page.tsx",
			"qualifiedName": "default"
		},
		"309": {
			"packageName": "rtsv",
			"packagePath": "src/app/auth/signup/page.tsx",
			"qualifiedName": "default"
		},
		"310": {
			"packageName": "rtsv",
			"packagePath": "src/app/event/[accessCode]/page.tsx",
			"qualifiedName": "default"
		},
		"311": {
			"packageName": "rtsv",
			"packagePath": "src/app/event/[accessCode]/page.tsx",
			"qualifiedName": "default"
		},
		"312": {
			"packageName": "rtsv",
			"packagePath": "src/app/presenter/[eventId]/page.tsx",
			"qualifiedName": "default"
		},
		"313": {
			"packageName": "rtsv",
			"packagePath": "src/app/presenter/[eventId]/page.tsx",
			"qualifiedName": "default"
		},
		"314": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "SocketHandler"
		},
		"315": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "SocketHandler"
		},
		"316": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "req"
		},
		"317": {
			"packageName": "rtsv",
			"packagePath": "src/pages/api/socket.ts",
			"qualifiedName": "res"
		},
		"318": {
			"packageName": "rtsv",
			"packagePath": "src/components/AnimatedNumber.tsx",
			"qualifiedName": "AnimatedNumber"
		},
		"319": {
			"packageName": "rtsv",
			"packagePath": "src/components/AnimatedNumber.tsx",
			"qualifiedName": "AnimatedNumber"
		},
		"320": {
			"packageName": "rtsv",
			"packagePath": "src/components/AnimatedNumber.tsx",
			"qualifiedName": "__0"
		},
		"321": {
			"packageName": "rtsv",
			"packagePath": "src/components/admin/AdminAddQuestionForm.tsx",
			"qualifiedName": "AdminAddQuestionForm"
		}
	},
	"files": {
		"entries": {
			"1": "src/hooks/useAdminQuestions.ts",
			"2": "src/hooks/useInviteCodes.ts",
			"3": "src/hooks/usePresenterData.ts",
			"4": "src/hooks/useSocket.ts",
			"5": "src/lib/questionUtils.ts",
			"6": "src/lib/supabaseClient.ts",
			"7": "src/lib/utils.ts",
			"8": "src/types/index.ts",
			"9": "src/pages/api/socket.ts",
			"10": "src/app/api/invite-codes/route.ts",
			"11": "src/app/layout.tsx",
			"12": "src/app/page.tsx",
			"13": "src/components/AnimatedNumber.tsx",
			"14": "src/context/AuthContext.tsx",
			"15": "src/app/admin/page.tsx",
			"16": "src/components/admin/AdminAddQuestionForm.tsx",
			"17": "src/components/admin/InviteCodeManager.tsx",
			"18": "src/components/auth/AuthForm.tsx",
			"19": "src/components/layout/Header.tsx",
			"20": "src/components/ui/button.tsx",
			"21": "src/components/ui/card.tsx",
			"22": "src/components/ui/checkbox.tsx",
			"23": "src/components/ui/collapsible.tsx",
			"24": "src/components/ui/input.tsx",
			"25": "src/components/ui/label.tsx",
			"26": "src/components/ui/radio-group.tsx",
			"27": "src/components/ui/select.tsx",
			"28": "src/components/ui/separator.tsx",
			"29": "src/components/ui/sonner.tsx",
			"30": "src/components/ui/tabs.tsx",
			"31": "src/components/ui/textarea.tsx",
			"32": "src/app/admin/[eventId]/page.tsx",
			"33": "src/app/admin/invite-codes/page.tsx",
			"34": "src/app/auth/login/page.tsx",
			"35": "src/app/auth/signup/page.tsx",
			"36": "src/app/event/[accessCode]/page.tsx",
			"37": "src/app/presenter/[eventId]/page.tsx"
		},
		"reflections": {
			"1": 1,
			"2": 57,
			"3": 60,
			"4": 73,
			"5": 80,
			"6": 84,
			"7": 86,
			"8": 92,
			"9": 124,
			"10": 131,
			"11": 140,
			"12": 142,
			"13": 143,
			"14": 144,
			"15": 152,
			"16": 153,
			"17": 154,
			"18": 155,
			"19": 156,
			"20": 157,
			"21": 158,
			"22": 159,
			"23": 160,
			"24": 161,
			"25": 162,
			"26": 163,
			"27": 164,
			"28": 165,
			"29": 166,
			"30": 167,
			"31": 168,
			"32": 169,
			"33": 170,
			"34": 171,
			"35": 172,
			"36": 173,
			"37": 174
		}
	}
}
